service: import-service
frameworkVersion: "3"
useDotenv: true

custom:
  bucketName: ${env:BUCKET_NAME}
  sqsQueueName: catalogItemsQueue
  queueUrl: ${env:QUEUE_URL}

provider:
  name: aws
  runtime: nodejs18.x
  profile: serverlessUser
  region: eu-west-1
  stage: dev
  httpApi:
    cors: true
    authorizers:
      basicAuthorizer:
        type: request
        functionArn: arn:aws:lambda:eu-west-1:730335492388:function:authorization-service-dev-basicAuthorizer
  iam:
   role:
     statements:
       - Effect: "Allow"
         Action:
           - "s3:ListBucket"
         Resource: "arn:aws:s3:::${self:custom.bucketName}/*"
  environment:
    BUCKET_NAME: ${self:custom.bucketName}
    REGION: ${env:REGION}
    QUEUE_URL: https://sqs.eu-west-1.amazonaws.com/730335492388/catalogItemsQueue

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
     - httpApi:
         path: /import
         method: get
         authorizer: 
          name: basicAuthorizer
    role: ImportProductsFileRole


        #  request:
        #   parameters:
        #     querystrings:
        #       name: true
        
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: ${self:custom.bucketName}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
    role: ImportFileParserRole

resources:
  Resources:
    ImportProductsFileRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ImportProductsFileRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ImportProductsFilePolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action: s3:PutObject
                  Resource: "arn:aws:s3:::${self:custom.bucketName}/*"
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: "*"
    ImportFileParserRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ImportFileParserRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ImportFileParserPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action: 
                    - s3:GetObject
                    - s3:PutObject
                  Resource: "arn:aws:s3:::${self:custom.bucketName}/*"
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: "*"
                - Effect: Allow
                  Action: sqs:sendmessage
                  Resource: "arn:aws:sqs:*:*:${self:custom.sqsQueueName}"